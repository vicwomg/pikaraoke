name: CI

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
    - master

env:
  PYTHON_VERSION: '3.9'

jobs:
  code-quality:
    runs-on: ubuntu-latest
    env:
      SKIP: no-commit-to-branch # skips commit to main check
      PRE_COMMIT_CONFIG: code_quality/.pre-commit-config.yaml
      VENV: venv
      VENV_ACTIVATE: venv/bin/activate

    steps:
    - name: Check out code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # V4.1.7
      with:
        token: ${{ github.token }}

    - name: Cache pre-commit dependencies
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # V4.0.2
      id: cache
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles(env.PRE_COMMIT_CONFIG) }}
        restore-keys: |
          ${{ runner.os }}-pre-commit-

    - name: Install Requirements
      run: python3 -m pip install docstr-coverage==2.3.2 pre-commit==3.7.1

    - name: Code Quality
      run: |
        pre-commit run --config ${{ env.PRE_COMMIT_CONFIG }} --all-files

    - name: Docstring Coverage
      run: |
        mkdir -p docs/badges/ docstr
        mv code_quality/.docstr.yaml . # --config option didn't work
        docstr-coverage 2>&1 | tee docstr/docstring_coverage.txt
        ls docs/badges

  commitlint:
    runs-on: ubuntu-latest
    name: Commitlint
    steps:
    - name: Run commitlint
      uses: opensource-nepal/commitlint@v1

  smoketest:
    runs-on: ${{ matrix.os }}
    name: Smoke Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install pipx
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install pipx
        python3 -m pipx ensurepath

    - name: Install Poetry
      run: |
        pipx install poetry

    - name: Install Package
      run: poetry install --no-interaction --no-ansi

    - name: Verify Install
      run: poetry run pikaraoke --help
